# docker-compose.yml
version: '3.8'

services:
  db:
    image: postgres:15
    ports:
      - "${DATABASE_PORT}:5432"
    env_file: ${ENV_FILE:-.env}  # Usa .env por defecto
    environment:
      PGPASSFILE: /run/secrets/pgpass
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    env_file: ${ENV_FILE:-.env}
    environment:
      - DATABASE_URL=postgres://${DATABASE_USER}:${DATABASE_PASSWORD}@db:5432/${DATABASE_NAME}
      - RUST_LOG=debug
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:${SERVER_PORT}/" ]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network


volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge